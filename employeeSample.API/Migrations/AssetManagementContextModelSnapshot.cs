// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using employeeSample.API.Models;

#nullable disable

namespace employeeSample.API.Migrations
{
    [DbContext(typeof(AssetManagementContext))]
    partial class AssetManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("employeeSample.API.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<int>("AssetCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssetCreatedOn")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("InventoryID");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("WarrantyEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("WarrantyStartDate")
                        .HasColumnType("date");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("isAvailable");

                    b.HasKey("AssetId")
                        .HasName("PK__ASSETS__43492372F02EB0B6");

                    b.HasIndex("AssetCreatedBy");

                    b.HasIndex(new[] { "InventoryId" }, "IX_Assets_InventoryID");

                    b.ToTable("ASSETS", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.AssetAllocation", b =>
                {
                    b.Property<int>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AllocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllocationId"));

                    b.Property<int>("AllocatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AllocatedOn")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("AllocationId")
                        .HasName("PK__ASSET_AL__B3C6D6AB3ABEDFF2");

                    b.HasIndex("AllocatedBy");

                    b.HasIndex("AssetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ASSET_ALLOCATION", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.EmployeeRole", b =>
                {
                    b.Property<int>("EmpRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpRoleId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("EmpRoleId")
                        .HasName("PK__EMPLOYEE__6C99F20F655ABA4E");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EMPLOYEE_ROLE", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.Employeemaster", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EmpCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmpCreatedOn")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gid")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("ManagerID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__EMPLOYEE__7AD04FF14AA32A8B");

                    b.HasIndex("EmpCreatedBy");

                    b.HasIndex(new[] { "ManagerId" }, "IX_EmployeeMaster_ManagerID");

                    b.ToTable("EMPLOYEEMASTER", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InventoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("InvCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvCreatedOn")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId")
                        .HasName("PK__INVENTOR__F5FDE6D3E6CB5E7C");

                    b.HasIndex("InvCreatedBy");

                    b.ToTable("INVENTORIES", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReqAssetType")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ReqCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReqCreatedOn")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("ReqStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RequestId")
                        .HasName("PK__REQUESTS__33A8519A45FE9623");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex(new[] { "AssetId" }, "IX_Requests_AssetID");

                    b.HasIndex(new[] { "ReqCreatedBy" }, "IX_Requests_ReqCreatedBy");

                    b.ToTable("REQUESTS", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId")
                        .HasName("PK__ROLES__8AFACE3A508A0382");

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("employeeSample.API.Models.Asset", b =>
                {
                    b.HasOne("employeeSample.API.Models.Employeemaster", "AssetCreatedByNavigation")
                        .WithMany("Assets")
                        .HasForeignKey("AssetCreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__ASSETS__AssetCre__57DD0BE4");

                    b.HasOne("employeeSample.API.Models.Inventory", "Inventory")
                        .WithMany("Assets")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ASSETS__Inventor__56E8E7AB");

                    b.Navigation("AssetCreatedByNavigation");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("employeeSample.API.Models.AssetAllocation", b =>
                {
                    b.HasOne("employeeSample.API.Models.Employeemaster", "AllocatedByNavigation")
                        .WithMany("AssetAllocationAllocatedByNavigations")
                        .HasForeignKey("AllocatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__ASSET_ALL__Alloc__6166761E");

                    b.HasOne("employeeSample.API.Models.Asset", "Asset")
                        .WithMany("AssetAllocations")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ASSET_ALL__Asset__5F7E2DAC");

                    b.HasOne("employeeSample.API.Models.Employeemaster", "Employee")
                        .WithMany("AssetAllocationEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ASSET_ALL__Emplo__607251E5");

                    b.Navigation("AllocatedByNavigation");

                    b.Navigation("Asset");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("employeeSample.API.Models.EmployeeRole", b =>
                {
                    b.HasOne("employeeSample.API.Models.Employeemaster", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EMPLOYEE___Emplo__662B2B3B");

                    b.HasOne("employeeSample.API.Models.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EMPLOYEE___RoleI__671F4F74");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("employeeSample.API.Models.Employeemaster", b =>
                {
                    b.HasOne("employeeSample.API.Models.Employeemaster", "EmpCreatedByNavigation")
                        .WithMany("InverseEmpCreatedByNavigation")
                        .HasForeignKey("EmpCreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__EMPLOYEEM__EmpCr__51300E55");

                    b.HasOne("employeeSample.API.Models.Employeemaster", "Manager")
                        .WithMany("InverseManager")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__EMPLOYEEM__Manag__503BEA1C");

                    b.Navigation("EmpCreatedByNavigation");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("employeeSample.API.Models.Inventory", b =>
                {
                    b.HasOne("employeeSample.API.Models.Employeemaster", "InvCreatedByNavigation")
                        .WithMany("Inventories")
                        .HasForeignKey("InvCreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__INVENTORI__InvCr__540C7B00");

                    b.Navigation("InvCreatedByNavigation");
                });

            modelBuilder.Entity("employeeSample.API.Models.Request", b =>
                {
                    b.HasOne("employeeSample.API.Models.Employeemaster", "ApprovedByNavigation")
                        .WithMany("RequestApprovedByNavigations")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK__REQUESTS__Approv__5CA1C101");

                    b.HasOne("employeeSample.API.Models.Asset", "Asset")
                        .WithMany("Requests")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK__REQUESTS__AssetI__5BAD9CC8");

                    b.HasOne("employeeSample.API.Models.Employeemaster", "ReqCreatedByNavigation")
                        .WithMany("RequestReqCreatedByNavigations")
                        .HasForeignKey("ReqCreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__REQUESTS__ReqCre__5AB9788F");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("Asset");

                    b.Navigation("ReqCreatedByNavigation");
                });

            modelBuilder.Entity("employeeSample.API.Models.Asset", b =>
                {
                    b.Navigation("AssetAllocations");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("employeeSample.API.Models.Employeemaster", b =>
                {
                    b.Navigation("AssetAllocationAllocatedByNavigations");

                    b.Navigation("AssetAllocationEmployees");

                    b.Navigation("Assets");

                    b.Navigation("EmployeeRoles");

                    b.Navigation("Inventories");

                    b.Navigation("InverseEmpCreatedByNavigation");

                    b.Navigation("InverseManager");

                    b.Navigation("RequestApprovedByNavigations");

                    b.Navigation("RequestReqCreatedByNavigations");
                });

            modelBuilder.Entity("employeeSample.API.Models.Inventory", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("employeeSample.API.Models.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
